version: "3.9"
services:

  postgres:
    image: postgres:16.2
    restart: always
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=prefect
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    image: prefecthq/prefect:2.18-python3.12
    restart: always
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "server", "start"]
    volumes:
      - ./data:/prefect
      - ./flows:/flows
    environment:
      - PREFECT_HOME=/prefect
      - PREFECT_LOCAL_STORAGE_PATH=/flows
      - PREFECT_UI_URL=http://127.0.0.1:4200/api
      - PREFECT_API_URL=http://127.0.0.1:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/prefect
      - RSS_DB=postgresql+asyncpg://postgres:postgres@postgres:5432/rss
    ports:
      - 4200:4200
    healthcheck:
      test: ["CMD-SHELL", "python3 /flows/health.py"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

  agent:
    image: rssagent:latest
    volumes:
      - ./flows/:/flows
    environment:
      - PREFECT_API_URL=http://server:4200/api
      - PREFECT_LOCAL_STORAGE_PATH=/flows
      - RSS_DB=postgresql+asyncpg://postgres:postgres@postgres:5432/rss
    depends_on:
      postgres:
        condition: service_healthy
      server:
        condition: service_healthy
